'use client'
import { ToDo, User } from "@prisma/client";
import { useRouter } from "next/navigation";
import { FormEvent, useState } from "react";
import styles from "./page.module.scss";
import processFormData from "../utils/forms";

interface ToDoProps {
    users: User[];
}

export default function ToDoForm({ users }: ToDoProps) {
    const router = useRouter();
    // const [task, setTask] = useState(todo);

    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
        e.preventDefault();
    
        // Grab the formdata with our handy form parsing utility function.
        let formData = processFormData(e.currentTarget);
    
        // Add some metadata; in a persistent app this would be automatically generated by the backend.
        formData.due = new Date(formData.due).toISOString()
    
        fetch('/api/todos', {
          method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });
    
        // Clear the form.
        e.currentTarget.reset();

        router.refresh();
      }

    return (
        <form name="todo-form" onSubmit={(e) => handleSubmit(e)} className={styles.formAddTodo}>
            <div className={styles.formRow}>
                <label htmlFor="name">Assign to:</label> <select name="assigned">{users.map((user: User) => <option value={user.id} key={user.id}>{user.first_name} {user.last_name}</option>)}</select>
            </div>

            <div className={styles.formRow}>
                <label htmlFor="assigned">Task Name:</label> <input name="name" placeholder="Enter task name..." required />
            </div>

            <div className={styles.formRow}>
                <label htmlFor="description">Task description:</label>
                <textarea name="description" placeholder="Enter task desciption..." required></textarea>
            </div>

            <div className={styles.formRow}>
                <label htmlFor="due">Due Date:</label> <input name="due" type="datetime-local" required />
            </div>

            <button type="submit">Add Todo</button>
        </form>
    );
}
